---
# Kubernetes master setup

- name: Kubernetes reset
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: Kubernetes token generate
  shell: kubeadm token generate
  register: kubeadm_token_generate
  when: kubeadm_reset is succeeded

- name: Store token
  set_fact:
    cacheable: true
    kubeadm_token: "{{ kubeadm_token_generate.stdout }}"

- name: Store master ip
  set_fact:
    cacheable: true
    kubeadm_master_ip: "{{ ansible_default_ipv4.address }}"

- name: Kubernetes init
  shell: >
    kubeadm init --token {{ kubeadm_token }}
    --apiserver-advertise-address={{ kubeadm_master_ip }}
    --pod-network-cidr={{ kubeadm_cidr }}
  register: kubeadm_init
  when: kubeadm_token_generate is succeeded

- name: Create Kubernetes config directory
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy kubeconfig to config directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    remote_src: yes
    backup: yes
  when: kubeadm_init is succeeded

- name: Extract x509 token
  shell: |
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | 
    openssl rsa -pubin -outform der 2>/dev/null | 
    openssl dgst -sha256 -hex | sed 's/^.* //'
  register: x509_extract
  when: kubeadm_init is succeeded

- name: Store x509 token
  set_fact:
    cacheable: true
    kubeadm_x509_token: "{{ x509_extract.stdout }}"
  when: kubeadm_init is succeeded

- name: Install Weave Net network driver
  shell: >
    kubectl apply -f
    "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  register: weavenet_driver
  when: false

- name: Install Flannel network driver
  shell: >
    kubectl apply -f
    https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  register: flannel_driver
  when: kubeadm_init is succeeded

- name: Restart Kubelet
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  register: kubelet_restarted
